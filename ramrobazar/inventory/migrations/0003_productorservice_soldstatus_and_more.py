# Generated by Django 4.0.4 on 2022-06-06 05:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('inventory', '0002_service_is_blocked_service_is_visible'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductOrService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('web_id', models.CharField(help_text='format: required, unique', max_length=50, unique=True, verbose_name='product web id')),
                ('slug', models.SlugField(help_text='format: required, letters, numbers, underscore or hyphen', max_length=255, verbose_name='product url')),
                ('name', models.CharField(help_text='format: required, max_length=250', max_length=250, verbose_name='product name')),
                ('description', models.TextField(help_text='format: required', verbose_name='product description')),
                ('is_visible', models.BooleanField(default=True, help_text='format: true->product is visiible', verbose_name='product visibility')),
                ('is_blocked', models.BooleanField(default=False, help_text='format: true->product is blocked', verbose_name='product blocked')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='format: Y-m-d H:M:S', verbose_name='date product created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='format: Y-m-d H:M:S', verbose_name='date product last updated')),
                ('is_product', models.BooleanField(default=True, help_text='format: true->product, flase->service', verbose_name='Is this product?')),
                ('category', mptt.fields.TreeManyToManyField(to='inventory.category')),
            ],
        ),
        migrations.CreateModel(
            name='SoldStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyer_status', models.BooleanField(default=False, help_text='format: default=false, true=buyer confirms buying', verbose_name='bought by buyer')),
                ('seller_status', models.BooleanField(default=False, help_text='format: default=false, true=seller confirms selling', verbose_name='sold by seller')),
                ('sold_units', models.IntegerField(default=0, help_text='number of units/times sold to buyer')),
                ('date_sold', models.DateField(help_text='date when product/service was sold', verbose_name='date sold')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('product_or_service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sold_status', to='inventory.productorservice')),
            ],
        ),
        migrations.RemoveField(
            model_name='servicesoldstatus',
            name='buyer',
        ),
        migrations.RemoveField(
            model_name='servicesoldstatus',
            name='service',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='product',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='service',
        ),
        migrations.RemoveField(
            model_name='media',
            name='product',
        ),
        migrations.RemoveField(
            model_name='media',
            name='service',
        ),
        migrations.RemoveField(
            model_name='product',
            name='category',
        ),
        migrations.RemoveField(
            model_name='product',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='product',
            name='description',
        ),
        migrations.RemoveField(
            model_name='product',
            name='is_blocked',
        ),
        migrations.RemoveField(
            model_name='product',
            name='is_visible',
        ),
        migrations.RemoveField(
            model_name='product',
            name='name',
        ),
        migrations.RemoveField(
            model_name='product',
            name='reported_by',
        ),
        migrations.RemoveField(
            model_name='product',
            name='seller',
        ),
        migrations.RemoveField(
            model_name='product',
            name='slug',
        ),
        migrations.RemoveField(
            model_name='product',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='product',
            name='users_wishlist',
        ),
        migrations.RemoveField(
            model_name='product',
            name='web_id',
        ),
        migrations.RemoveField(
            model_name='service',
            name='category',
        ),
        migrations.RemoveField(
            model_name='service',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='service',
            name='description',
        ),
        migrations.RemoveField(
            model_name='service',
            name='is_blocked',
        ),
        migrations.RemoveField(
            model_name='service',
            name='is_visible',
        ),
        migrations.RemoveField(
            model_name='service',
            name='name',
        ),
        migrations.RemoveField(
            model_name='service',
            name='reported_by',
        ),
        migrations.RemoveField(
            model_name='service',
            name='seller',
        ),
        migrations.RemoveField(
            model_name='service',
            name='slug',
        ),
        migrations.RemoveField(
            model_name='service',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='service',
            name='users_wishlist',
        ),
        migrations.RemoveField(
            model_name='service',
            name='web_id',
        ),
        migrations.AlterField(
            model_name='comment',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, help_text='format: not required', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comment_children', to='inventory.comment', verbose_name='parent comment'),
        ),
        migrations.DeleteModel(
            name='ProductSoldStatus',
        ),
        migrations.DeleteModel(
            name='ServiceSoldStatus',
        ),
        migrations.AddField(
            model_name='productorservice',
            name='product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='inventory.product'),
        ),
        migrations.AddField(
            model_name='productorservice',
            name='reported_by',
            field=mptt.fields.TreeManyToManyField(blank=True, related_name='reported_product', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productorservice',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productorservice',
            name='service',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service', to='inventory.service'),
        ),
        migrations.AddField(
            model_name='productorservice',
            name='users_wishlist',
            field=mptt.fields.TreeManyToManyField(blank=True, related_name='user_wishlist_product', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='product_or_service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='inventory.productorservice'),
        ),
        migrations.AddField(
            model_name='media',
            name='product_or_service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='media', to='inventory.productorservice'),
        ),
    ]
